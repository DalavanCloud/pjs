// generated by pjs -- do not edit
function transForm(sexp, outVar) {
  var op = sexp[0];
  switch (op.sym()) {
    case "var":
      outVar = sexp[1].sym();
      return transSexp(sexp[2], outVar);
  }
  return [sexp];
}

function transSexp(sexp, outVar) {
  switch (typeof(sexp)) {
    case "undefined":
      throw new Error("undefined sexp");
    case "string":
      return sexp;
    case "number":
      return sexp;
    default:
      if (pjs.isSymbol(sexp)) {
        return sexp;
      } else {
        return transForm(sexp, outVar);
      }
  }
}

function trans(stmts, outVar) {
  var blocks = [];
  for (var i = 0; i < stmts.length; ++i) {
    if (i == stmts.length - 1) {
      blocks.push(transSexp(stmts[i], outVar));
    } else {
      blocks.push(transSexp(stmts[i]));
    }
  }
  return [].concat.apply([], blocks);
}
exports.trans = trans;
