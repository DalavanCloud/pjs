// generated by pjs -- do not edit
var symlib = require("./symbol");

function stmt(sexp, out) {
  var g = gen2(sexp, out);
  if (!g.expr) {
    return g.code;
  }
  if (out) {
    if (out == "return") {
      return "return " + code + ";";
    } else {
      return out + " = " + code + ";";
    }
  } else {
    if (symlib.isSymbol(sexp[0], "function")) {
      return g.code;
    } else {
      return g.code + ";";
    }
  }
}

function expr(sexp, prec) {
  var g = gen2(sexp);
  if (!g.expr) {
    throw new Error("in " + sexp + " stmt here not supported, had code " + g.code);
  }
  if (!(prec in precTable)) {
    throw new Error("unknown prec " + prec);
  }
  var prec = precTable[prec];
  if (prec > g.prec) {
    return "(" + g.code + ")";
  } else {
    return g.code;
  }
}