;; Copyright 2015 Google Inc. All Rights Reserved.
;;
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.

(var symlib (require "./symbol"))

(function stmt (sexp out)
  (var g (gen2 sexp out))
  (if (! g.expr)
    (return g.code))  ;; Already a statement.
  (return
   (if out
     (if (== out "return")
       (+ "return " code ";")
       (+ out " = " code ";"))
     ;; Add a semicolon to the expression unless it's a function decl.
     (if (symlib.isSymbol (at sexp 0) "function")
       g.code
       (+ g.code ";")))))

(function expr (sexp prec)
  (var g (gen2 sexp))
  (if (! g.expr)
    (throw (new Error (+ "in " sexp " stmt here not supported, had code " g.code))))
  (if (! (in prec precTable))
    (throw (new Error (+ "unknown prec " prec)))))
