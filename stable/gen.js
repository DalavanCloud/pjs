// generated by pjs -- do not edit
var symlib = require("./symbol");
var precTable = {
  "lit": 19,
  "list": 19,
  "[]": 18,
  ".": 18,
  "new": 18,
  "call": 18,
  "!": 15,
  "~": 15,
  "++": 15,
  "--": 15,
  "*": 14,
  "/": 14,
  "%": 14,
  "+": 13,
  "-": 13,
  "<": 11,
  ">": 11,
  "instanceof": 11,
  "in": 11,
  "==": 10,
  "!=": 10,
  "obj": 1,
  "&&": 6,
  "=": 3,
  "+=": 3,
  "()": 19,
  ",": 0,
  "none": 0
};
exports.precTable = precTable;

function stmt(sexp) {
  var g = gen2(sexp);
  if (!g.expr) {
    return g.code;
  }
  var code = g.code;
  if (!symlib.isSymbol(sexp[0], "function")) {
    g.code += ";";
  }
  return code;
}

function expr(sexp, prec) {
  var g = gen2(sexp);
  if (!g.expr) {
    throw new Error("in " + sexp + " stmt here not supported, had code " + g.code);
  }
  if (!(prec in precTable)) {
    throw new Error("unknown prec " + prec);
  }
  var prec = precTable[prec];
  if (prec > g.prec) {
    return "(" + g.code + ")";
  } else {
    return g.code;
  }
}